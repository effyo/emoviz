<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="/home/sshUser/projetEmoviz/favicon.ico">

    <title>Visualisation with starPlot </title>

   	<!--
    <link href="../dist/css/bootstrap.min.css" rel="stylesheet"> 
    <link href="../dist/css/bootstrap-theme.min.css" rel="stylesheet">
    <link href="../assets/css/ie10-viewport-bug-workaround.css" rel="stylesheet">
  	-->
		<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.3/angular.min.js"></script>
		<script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.3/angular-route.min.js"></script>
		<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
		<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
		<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
		<script src="/public/RadarChart.js"> </script>
		
		<script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
		<script src="/socket.io/socket.io.js"></script>
		
    <!-- Custom styles for this template -->
   <!-- <link href="theme.css" rel="stylesheet"> -->


    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
     <body role="document" >

		

		<script>

		$(function(){
						
            var iosocket = io.connect();
						iosocket.emit('serverMessage',"Bonjour" );
            iosocket.on('bddMess', function(rows){
            var nest = d3.nest()
							.key(function(d) { return d.Day; })
							.entries(rows);
						
						
						////////////////////////////////////////////////////////////
						var nest2 = d3.nest()// pour connaitre le nombre de participant
							.key(function(d) { return d.IDNom; })
							.entries(rows);
							
						
						////////////////////////////////////////////////////////////
						
					
						var dataAveTot = new Array();
						var cptZero = new Array(0,0,0,0,0,0,0,0,0);
						for (var i =0; i<9; i++){
							dataAveTot.push ( new Array(0,0));
						}
					  
    				
						for (var eachRow = 3; eachRow<nest.length; eachRow++){// boucle pour avoir chaque jour. Mis a 3 pour enlever des données, ne pas oublier de le remettre a 0
							//var currentRow = nest[eachRow]["values"];
							createOneLine(nest[eachRow]["values"],nest2.length,dataAveTot,cptZero);
						}
						initRadar(dataAveTot);
						
						
						
						initRadar2(cptZero);
					});   
        });
    
    // dataParsing
		function createOneLine(currentRow,sizeUser,dataAveTot,cptZero){

			//init data
			var tabVisu = new Array(sizeUser * 9);
			for (var j=0; j< sizeUser *9; j++){
				tabVisu[j] = 0; 
			}
			
			//data average
			var dataMoy = new Array();
			for (var i=0; i<9; i++){
				dataMoy.push(new Array(0,0));
			}
			
			
			var date = currentRow[0]["Day"].substring(0,10);
			//Loop on the number of message
			for (var eachLogin =0; eachLogin<currentRow.length; eachLogin++){ 
			//Loop to add each emotion
				
				for (var eachEmotion =0; eachEmotion<9; eachEmotion++){
					var position = eachEmotion * sizeUser  + (currentRow[eachLogin]["IDNom"] -1);
						var valeurCour = currentRow[eachLogin]["Q6_"+(eachEmotion+1)];
						if (valeurCour <8 && valeurCour >0 && currentRow[eachLogin]["Q1"] == 3){
							var valTemp = 0;
							if (tabVisu[position] != 0){
								valTemp = tabVisu[position];
								dataMoy[eachEmotion][1]--;
							}
							tabVisu[position] = valeurCour;	
							dataMoy[eachEmotion][0] -= valTemp;
							dataMoy[eachEmotion][0] += valeurCour; // average
							dataMoy[eachEmotion][1]++;// cpt
							cptZero[eachEmotion]++;
						}
						/*else if (valeurCour != 0){
							cptZero[eachEmotion]++;
						
						}*/
				}	
			}
			
			var temp = new Array();
			for (var i =0; i<9; i++){
				if (dataMoy[i][0] != 0){
					dataAveTot[i][0] += dataMoy[i][0];
					dataAveTot[i][1] += dataMoy[i][1];
					
					temp.push(dataMoy[i][0]/dataMoy[i][1]);
					
				}else
					temp.push(0);
			}
			

		}
		function initRadar2(cptZero){
				var tabTemp = new Array("Plaisir", "Anxiété", "Curiosité", "Ennui", "Engagement", "Confusion", "Surprise", "Frustration", "Neutre");
				var LegendOptions = new Array();
				
				
				
				var d = new Array();
				var temp = new Array();
				var valueMax = Array.max(cptZero);
				var label = document.getElementById("labelZero");
				label.innerHTML += " : "+ valueMax;
				LegendOptions.push("Moyenne générale des émotions");
				for (var i=0; i<9;i++){
				  //Legend titles
					temp.push ({
						axis : tabTemp[i],
						value : cptZero[i]/valueMax
					});
					//Data
					
				}
				d.push(temp);
				//Options for the Radar chart, other than default
				
				createRadar(d, LegendOptions,2, 10);
				//Call function to draw the Radar chart
				//Will expect that data is in %'s
						
	}	
	
		function initRadar(dataMoyTot){
				var tabTemp = new Array("Plaisir", "Anxiété", "Curiosité", "Ennui", "Engagement", "Confusion", "Surprise", "Frustration", "Neutre");
				var LegendOptions = new Array();
				var d = new Array();
				var temp = new Array();
				LegendOptions.push("Moyenne Général des émotions");
				for (var i=0; i<9;i++){
				  //Legend titles
					
					temp.push ({
						axis : tabTemp[i],
						value : (dataMoyTot[i][0]/dataMoyTot[i][1])/7
					});
					//Data
					
				}
				d.push(temp);
				//Options for the Radar chart, other than default
				
				createRadar(d, LegendOptions,1, 7);
				//Call function to draw the Radar chart
				//Will expect that data is in %'s
						
	}				
					
////////////////////////////////////////////
/////////// Initiate legend ////////////////
////////////////////////////////////////////
function createRadar(d, LegendOptions,number, echelle){
var colorscale = d3.scale.category10();
	var w = 300,
							h = 300;
	var mycfg = {
								w: w,
								h: h,
								maxValue: 1,
								levels: echelle,
								ExtraWidthX: 300
							}
	RadarChart.draw("#body"+number, d, mycfg);
	
	var svg = d3.select("#chart"+number)
		.selectAll('svg')
		.append('svg')
		.attr("width", w+300)
		.attr("height", h)

	//Create the title for the legend
	var text = svg.append("text")
		.attr("class", "title")
		.attr('transform', 'translate(220,0)') 
		.attr("x", w - 70)
		.attr("y", 10)
		.attr("font-size", "12px")
		.attr("fill", "#404040")
		.text("Emotion per day");
		
	//Initiate Legend	
	var legend = svg.append("g")
		.attr("class", "legend")
		.attr("height", 100)
		.attr("width", 200)
		.attr('transform', 'translate(220,20)') 
		;
		//Create colour squares
		legend.selectAll('rect')
			.data(LegendOptions)
			.enter()
			.append("rect")
			.attr("x", w - 65)
			.attr("y", function(d, i){ return i * 20;})
			.attr("width", 10)
			.attr("height", 10)
			.style("fill", function(d, i){ return colorscale(i);})
			;
		//Create text next to squares
		legend.selectAll('text')
			.data(LegendOptions)
			.enter()
			.append("text")
			.attr("x", w - 52)
			.attr("y", function(d, i){ return i * 20 + 9;})
			.attr("font-size", "11px")
			.attr("fill", "#737373")
			.text(function(d) { return d; })
			;	
	}	
		Array.max = function( array ){
    	return Math.max.apply( Math, array );
		};
    </script>
    
    
    <body>
    	<div id="body1">
    		<h2>Moyenne générale des émotions</h2>
    		<!--<div id="chart"></div>-->
    		<label>Moyenne ressenti des émotions </label>
	  		<div id="chart1"></div>
	  	</div>
	  	</br>
	  	<div id="body2">
	  		<label id="labelZero">Nombre de zéro sur la plus grande valeur</label>
	  		<div id="chart2"></div>
	  	</div>
	  	
    
    
    </body>
